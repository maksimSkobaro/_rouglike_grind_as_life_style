#ifndef RL_MAIN
#define RL_MAIN
#pragma once
////////////////////////////////////////////////
////////////////////INCLUDES////////////////////
////////////////////////////////////////////////
#include <iostream>
#include <conio.h>
#include <cstring>
#include <Windows.h>

//	SetConsoleTextAttribute
//	\b
//	Волновой алгоритм

///////////////////////////////////////////////
////////////////////DEFINES////////////////////
///////////////////////////////////////////////
#define DEBUG 
#define ERR_NO_ERR 0
#define ERR_FILE 10
#define ERR_MEMORY 20
#define ERR_MEMORY 20
#define PATH_LOG "./log/log.log"
#define PATH_LOG_MAP "./log/_map_log.log"

///////////////////////////////////////////////
////////////////////GLOBALS////////////////////
///////////////////////////////////////////////
;

////////////////////////////////////////////////////////////
////////////////////FUNCTIONS_DECLARATION///////////////////
////////////////////////////////////////////////////////////
int log(const char *logString, const char *const logFileName = PATH_LOG);

////////////////////////////////////////////////////////////
////////////////////FUNCTIONS_DEFINITION////////////////////
////////////////////////////////////////////////////////////

int log(const char *logString, const char *const logFileName)
{
	FILE *logfile;

	if(fopen_s(&logfile, logFileName, "a"))
	{
		//log("log(): Не получилось открыть файл-лог.");	//	Оставлю как память
		exit(ERR_FILE);
	}


	char date[64];
	time_t currentSecond = time(0);
	ctime_s(date, 64, &currentSecond);
	strchr(date, '\n')[0] = '\0';


	fprintf_s(logfile, "[%s] : %s\n", date + 4, logString);


	fclose(logfile);


	return ERR_NO_ERR;
}

#endif // !RL_MAIN

